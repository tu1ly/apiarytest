--- Api ---

aaaaaqqqqqqqqqqqqqqaaaaaaaaaaaaaaaSend an existing blueprint and return gxzczczxczcxzcxeneratedsaasdasdadsd HTML. Both are expected to be in UTF-8
POST /blueprint/generate
> Accept: text/html
> Content-Type: text/plain
<<<EOT
--- Apiary.io ---
---
Apiary loves API. Of course then, we have API too. 
---
-- Blueprint --
EOT
< 200
< Content-Type: text/html
<<<EOT
<div id="documentationCointainer">
  <div id="leftColumn">
    <h1 id="apiHeadline">Apiary.io</h1>
    <div class="details"><p>Apiary loves API. Of course then, we have API too. </p></div>
    
    <a name="blueprint"></a>
    <div class="chapterWrapper">
    <hgroup class="chapter">
      <h1>Blueprint</h1>
    </hgroup>
    </div>
  </div>
</div>
EOT


Save new products in your shopping cart
POST /shopping-cart
> Content-Type: application/json
{ "product":"1AB23ORM", "quantity": 2 }
< 201
< Content-Type: application/json
{ "status": "created", "url": "/shopping-cart/2" }


-- Payment Resources --
This resource allows you to submit payment information to process your *shopping cart* items
POST /payment
{ "cc": "12345678900", "cvc": "123", "expiry": "0112" }
< 200
{ "receipt": "/payment/receipt/1" }

Testing URL for JSON Schema Validations
POST /url
> Content-Type: application/json
{ "a": "b", "c": 0}
< 200
{ "status": "ok" }

-- JSON Schema Validations --

POST /url
{
    "type": "object",
    "properties": {
        "a": {
            "type": "string",
            "format": "alphanumeric"
        },
        "c": {
            "type": "integer"
        }
    }
}
